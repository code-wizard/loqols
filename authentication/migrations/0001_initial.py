# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-17 19:52
from __future__ import unicode_literals

import authentication.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='LqUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(blank=True, max_length=500, verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'lq_user',
            },
        ),
        migrations.CreateModel(
            name='LqFollows',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lq_follows',
            },
        ),
        migrations.CreateModel(
            name='LqGeneralSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('who_can_event', models.PositiveIntegerField(choices=[(1, 'Off'), (2, 'People I follow'), (3, 'Everyone')], default=1)),
                ('private_account', models.BooleanField(default=False)),
                ('language', models.CharField(default='English', max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lq_general_setting',
            },
        ),
        migrations.CreateModel(
            name='LqProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=16, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=10, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('avatar', models.ImageField(blank=True, default='default_avatar.jpg', upload_to=authentication.models.photo_upload_path)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lq_profile',
            },
        ),
        migrations.CreateModel(
            name='LqPushNotificationSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.PositiveIntegerField(choices=[(1, 'Off'), (2, 'People I follow'), (3, 'Everyone')], default=3)),
                ('new_follower', models.PositiveIntegerField(choices=[(1, 'On'), (2, 'Off')], default=1)),
                ('reminder', models.PositiveIntegerField(choices=[(1, 'On'), (2, 'Off')], default=1)),
                ('message', models.PositiveIntegerField(choices=[(1, 'On'), (2, 'Off')], default=1)),
                ('likes', models.PositiveIntegerField(choices=[(1, 'Off'), (2, 'People I follow'), (3, 'Everyone')], default=3)),
                ('new_event', models.PositiveIntegerField(choices=[(1, 'Off'), (2, 'People I follow'), (3, 'Everyone')], default=3)),
                ('comment_likes', models.PositiveIntegerField(choices=[(1, 'Off'), (2, 'People I follow'), (3, 'Everyone')], default=3)),
            ],
            options={
                'db_table': 'lq_push_notification',
            },
        ),
    ]
